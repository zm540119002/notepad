如果了解一下大型网站的购物车怎样做的以下可以为你提供简单的思路：

 当用户进行购物时他有可能是本商电的会员或游客（非会员）；因此得出两种方案：

方案一：(会员)

　　用户进行购物时他是我们本商店的会员（数据库中存在该用户的数据），当用户添加商品到购物车的时候我们可以分为两种方法；

　　方法一，
　　　　当用户购买商品添加到购物车时没有进行登陆，如果我们用session来保存用户的数据那么我们就要考虑到这种情况，一旦用户关闭浏览器那么之前所保存的数据就会丢失，因此采用cookie来保存数据。
		当用户点击结账时，对用户进行登陆验证，然后判断cookie是否存在购买商品的信息。如果存在，就将cookie中的数据保存到mysql中，然后清空cookie信息，最后结账成功。

　　方法二
　　　　用户添加商品到购物车的时候必须进行登陆验证，然后才能将购买的商品直接保存在数据库，但是你有没有想过用户添加到购物车的商品，他不一定购买，因此我们额外增加了维护成本，但好处是用户能在何时何地都可以看到自己的购物信息。
		记住方式做任何电商网站，都要从用户的角度考虑。

	对比发现，第一种方法比较人性化，用户体验比较好，因此大多数主流电商网站都是采用第一种方法。
	
方案二：（非会员）

　　就是说你购物的时候你有可能不是本网站的会员，但你又想购买商品，那么我们会给你提供一个特殊的帐号（游客）具体实现思路如下：当用户购买通过cookie保存，结账的时候用户又不想注册，我们通过获取他的手机号码和地址，
	然后后台自动生成一个普通用户，将数据保存在数据库中并清除cookie。

以上两种方案都是我们日常在购物网站上经常遇到的，因此我们写购物车代码的时候一定要有一个清晰的思路，不然用户体验方面会大打折扣。

2016年12月20日更新: 
今天来开始写一下关于购物车的东西, 这里首先抛出四个问题:
1）用户没登陆用户名和密码,添加商品, 关闭浏览器再打开后 不登录用户名和密码　问：购物车商品还在吗？ 
2）用户登陆了用户名密码,添加商品,关闭浏览器再打开后 不登录用户名和密码　问:购物车商品还在吗？   
3）用户登陆了用户名密码,添加商品, 关闭浏览器,然后再打开,登陆用户名和密码  问:购物车商品还在吗？
4）用户登陆了用户名密码,添加商品, 关闭浏览器 外地老家打开浏览器  登陆用户名和密码 问：购物车商品还在吗？

上面四个问题都是以京东为模板, 那么大家猜猜结果是什么呢？
１）在
２）不在了
３）在
４）在

如果你能够猜到答案, 那么说明你真的很棒, 那么关于这四点是怎么实现的呢?　（如果有不认可的小伙伴可以用京东实验一下）
下面我们就来讲解下购物车的原理,最后再来说下具体的code实现.
1)用户没有登录, 添加商品, 此时的商品是被添加到了浏览器的Cookie中, 所以当再次访问时(不登录),商品仍然在Cookie中, 所以购物车中的商品还是存在的.
2)用户登录了,添加商品, 此时会将Cookie中和用户选择的商品都添加到购物车中, 然后删除Cookie中的商品. 所以当用户再次访问(不登录),此时Cookie中的购物车商品已经被删除了, 所以此时购物车中的商品不在了.
3)用户登录, 添加商品,此时商品被添加到数据库做了持久化存储, 再次打开登录用户名和密码, 该用户选择的商品肯定还是存在的, 所以购物车中的商品还是存在的.
4)理由3)

这里再说下 没登录 保存商品到Cookie的优点以及保存到Session和数据库的对比:
1：Cookie： 优点： 保存用户浏览器（不用浪费我们公司的服务器） 缺点：Cookie禁用，不提供保存
2：Session：（Redis ： 浪费大量服务器内存：实现、禁用Cookie） 速度很快
3：数据库（Mysql、Redis、SOlr） 能持久化的就数据库 速度太慢

那么我今天要讲的就是:
用户没登陆：购物车添加到Cookie中
用户登陆： 保存购物车到Redis中 （不用数据库）


