daemon off;

#user  nobody;
worker_processes  4;
#worker_cpu_affinity 1000 0100 0010 0001;
worker_rlimit_nofile 100000;
worker_priority 0;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


#msgserver 8082
#content   8083


events {
    use epoll;
    worker_connections  65535;
    accept_mutex    on;
    multi_accept    on;
}


http {
    server_tokens off;
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr $remote_port - $remote_user [$time_local] "$request" $request_length '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" conn= $connection conn_req=$connection_requests '
                      '$request_time $upstream_response_time $upstream_addr '
                      '$scheme';

    access_log  /usr/local/nginx/logs/access.log  main buffer=32k flush=30s;
    error_log   /usr/local/nginx/logs/error.log;
    
    limit_conn_zone $binary_remote_addr zone=conn_limit:8m;
    
    limit_req_zone nemoconfig zone=lowlowfrequ:10m rate=160r/m;
    limit_req_zone $binary_remote_addr zone=minifrequ:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=normalfrequ:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=highfrequ:10m rate=60r/s;
    limit_req_zone $binary_remote_addr zone=ultrafrequ:5m rate=90r/s;
    limit_req_zone $binary_remote_addr zone=toohighfreq:10m rate=120r/s;
    limit_req_zone $binary_remote_addr zone=eventreportlimit:10m rate=150r/s;
    limit_req_zone $binary_remote_addr zone=websocketlimit:10m rate=8r/s;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    proxy_cache_path /var/cache0 levels=1:2 keys_zone=page:10m inactive=2h max_size=1g;
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
	
    upstream onlineClean{
		ip_hash;
        server 172.16.6.45:8182;		
    }
    
    upstream inc_chk{
		ip_hash;
        server 172.16.7.56:80;		
    }     


    server {
        listen       443 ssl;
        server_name  172.16.7.71;
        ssl_certificate     /usr/local/nginx/conf/172.16.7.71.crt;
        ssl_certificate_key /usr/local/nginx/conf/172.16.7.71.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2; 
        ssl_ciphers         HIGH:!aNULL:!MD5;
        #ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
		
		location / {
            index index.html index.htm;
        }

        location ^~ /api/rest/ {
            proxy_pass http://onlineClean;
			
			proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
			proxy_redirect off;
			add_header Access-Control-Allow-Origin *;
        }
		
		location ^~ /inc_chk/ {
            limit_req zone=ultrafrequ burst=50 nodelay;
            proxy_http_version 1.1;
            proxy_pass        http://inc_chk;
            proxy_next_upstream error timeout invalid_header;
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
        }
   

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    include /etc/nginx/conf.d/*.conf;
}
