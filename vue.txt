=====================================================================================
-------------------------------------------------------vue-cli2.0
	vue init webpack demo
	cd demo
	npm install
	npm run dev
-------------------------------------------------------vue-cli3.0
	npm install -g @vue/cli
	vue create weiya
	cd weiya
	vue run serve
-------------------------------------------------------打包
npm run build
-------------------------------------------------------
npm i @antv/g6-editor --save 
=====================================================================================Vue __ob__: Observer
__ob__: Observer这些数据是vue这个框架对数据设置的监控器，一般都是不可枚举的。

网上有很多解决的方案：

第一种：__ob__: Observer 是 Vue 对数据监控添加的属性，如果想去掉可以用赋值的方式。例如Object.assign({},this.owner)。 用这种方式也是可以解决。

第二种：假设list里面存放的就是那些带有__ob__: Observer的可以用JSON.parse(JSON.stringify(this.list))
=====================================================================================
axios.post(isurl,Qs.stringify(o),{'
    header:{
        'Content-Type': 'multipart/form-data'
    }
})
=====================================================================================
const _this = this;
const url = 'data_clean.php';
axios.defaults.timeout = 20000;
axios.defaults.headers.post['Content-Type'] = 'multipart/form-data';
axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';
axios.post(url,Qs.stringify(_this.postData)).
then(function (response) {
	if(response.data.rows && response.data.rows.length){
		_this.total = Number(response.data.total);
		_this.tableData = response.data.rows;
	}else{
		_this.$message({
			showClose: true,
			message: response.data.retMsg,
			duration: 3000,
			type: 'error',
			center: true
		});
	}
}).catch(function (error) {
	console.log(error);
});
--------------------------------------------------------------------
const _this = this;
const url = 'http://172.16.7.71:8182/api/rest/getRuleList';
_this.postData = {
	"status":0,
	"pageSize":_this.pageSize,
	"pageIndex":_this.currentPage
};
axios.defaults.timeout = 20000;
axios.post(url,JSON.stringify(_this.postData)).
then(function (response) {
	// console.log(response);
	if(response.data.retCode==0){
		_this.total = Number(response.data.pageNum);
		_this.tableData = response.data.data;
	}else{
		_this.$message({
			showClose: true,
			message: response.data.retMsg,
			duration: 3000,
			type: 'error',
			center: true
		});
	}
}).catch(function (error) {
	console.log(error);
});

const url = 'action.php?act=dataQualityEvolve&sub_sys_type=1&data_date=20191013';
const url = 'action.php?act=dataQualityEvolve&sub_sys_type=4';
const url = 'action.php?act=dataMapWithArea&data_date=20191106&sub_sys_type=2&problem_type=2';
axios.defaults.timeout = 20000;
axios.get(url).
then(function (response) {
	console.log(response);
}).catch(function (error) {
	console.log(error);
});
--------------------------------------------------------------------
const url = 'http://172.16.7.71:8182/api/rest/file/upload';
let fd = new FormData();
fd.append('uploadfile',file,file.name);
axios.post([url],fd,{
	// 加这里
	headers: {
	}
}).then(function (response) {
	if(response.data.retCode==0){
		_this.$message({
			message: '成功',
			type: 'success'
		});
	}else{
		_this.$message({
			showClose: true,
			message: response.data.retMsg,
			duration: 3000,
			type: 'error',
			center: true
		});
	}
}).catch(function (error) {
	console.log(error);
});
return false; //返回false不会自动上传
=====================================================================================
//监听-回显-事件
bus.$on('setTransfer', function(param){
	console.log(param);
});
//触发-回显-事件
bus.$emit('setTransfer',_this.fieldValue);
//监听-获取穿梭框值-事件
// bus.$on('get_transfer', function(param){
//     console.log(param);
// });
//触发-获取穿梭框值-事件
// bus.$emit('get_transfer',_this.fieldValue);
=====================================================================================
<el-input v-focus></el-input>
directives: {
  // 注册一个局部的自定义指令 v-focus
  focus: {
    // 指令的定义
    inserted: function (el) {
      // 聚焦元素
      el.querySelector('input').focus()
    }
  }
},
directives: {
	focus: {
		inserted: function (el, {value}) {
			if (value) {
				$(el).find("input").focus();//聚焦输入框
			}
		}
	}
},
//自定义指令
Vue.directive('focus', {
	inserted: function(el, binding) {
		//console.log(el)
		el.focus()
	}
})
=====================================================================================
[{…}]
0:
chapter_id: "1734292"
chapter_title: "1"
chapter_title_disabled: "true"
paragraph_list: Array(1)
0:
paragraph_id: "1734293"
paragraph_title: "11"
paragraph_title_disabled: "true"
paragraph_type: "TEXT"

_this.postData.chapter_list = _this.postData.chapter_list(chapter => {
	chapter = chapter.paragraph_list(paragraph => {
		return !!paragraph.paragraph_title_disabled;
	});
	return !!chapter.chapter_title_disabled;
});

console.log(_this.postData.chapter_list);
_this.postData.chapter_list = _this.postData.chapter_list(chapter => {
	chapter = chapter.paragraph_list(paragraph => {
		return !!paragraph.paragraph_title_disabled;
	});
	return !!chapter.chapter_title_disabled;
});
console.log(_this.postData.chapter_list);
=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================