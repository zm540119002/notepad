============================================
D:\gitlab\inc_chk\audit_config\private_ajax_action.php
D:\gitlab\inc_chk\audit_config\etl_cfg_act.php
D:\gitlab\inc_chk\audit_config\audit_config_home_act.php
D:\gitlab\inc_chk\audit_config\work_flow_act.php
D:\gitlab\inc_chk\audit_config\data_source_action.php
D:\gitlab\inc_chk\audit_config\ds_info\action.php
D:\gitlab\inc_chk\new_index\permission_manage_menu_new_act.php
D:\gitlab\inc_chk\new_index\action.php
D:\gitlab\inc_chk\pub_lib\user_mng.php
D:\gitlab\inc_chk\login.php

recOperateLog($staff_id,"990101","1");
recOperateLog($_POST['staff_id'],"1","0","0","没有角色权限");
recOperateLog($_POST['staff_id'],"999020201","1","0","登陆成功");
recOperateLog($_SESSION['ses_opt_id'],"999020201","1","0","主机配置");
============================================
public static final long   TOKEN_EXPIRE_TIME                 = 30 * 60 * 1000L;                // H_TOKENE有效时间
public static final long   SERVER_PUBLIC_KEY_EXPIRE_TIME     = 1 * 60 * 60 * 1000L;            // 服务器公钥有效时间
public static final long   TIMESTAMP_EXPIRE_TIME             = 3 * 60 * 1000L;                 // 时间序号过期时间
============================================               
/**
     * 一致性任务分析
     * @param tbUcCfgAdtRule
     * @param opType
     */
    private void analysisDiff(TbUcCfgAdtRule tbUcCfgAdtRule, String opType) {
        //登记 tb_uc_cfg_result_storage
        //先删除
        Example exampleResultStorage = new Example(TbUcCfgResultStorage.class);
        Example.Criteria criteriaResultStorage = exampleResultStorage.createCriteria();
        criteriaResultStorage.andEqualTo("adtId", tbUcCfgAdtRule.getAdtId());
        tbUcCfgResultStorageService.deleteByExample(exampleResultStorage);

        //新增
        TbUcCfgResultStorage tbUcCfgResultStorage = new TbUcCfgResultStorage();
        tbUcCfgResultStorage.setAdtId(tbUcCfgAdtRule.getAdtId());
        tbUcCfgResultStorage.setBelongType(GvnDict.BelongType.S);
        tbUcCfgResultStorage.setSourceType(GvnDict.ResultStoreSourceType.RESULT);

        //tb_uc_cfg_diff
        Example exampleDiff = new Example(TbUcCfgDiff.class);
        Example.Criteria criteriaDiff  = exampleDiff.createCriteria();
        criteriaDiff.andEqualTo("adtId", tbUcCfgAdtRule.getAdtId());
        TbUcCfgDiff diff = tbUcCfgDiffService.selectOneByExample(exampleDiff);

        //结果存储引用数据源别名
        String srcQuoteDsAlias = tbUcCfgQuoteDsService.getAliasByQuoteId(diff.getSourceDs());
        String destQuoteDsAlias = tbUcCfgQuoteDsService.getAliasByQuoteId(diff.getDestDs());

        //tb_uc_cfg_diff_item
        Example exampleDiffItem = new Example(TbUcCfgDiffItem.class);
        Example.Criteria criteriaDiffItem  = exampleDiffItem.createCriteria();
        criteriaDiffItem.andEqualTo("adtId", tbUcCfgAdtRule.getAdtId());
        List<TbUcCfgDiffItem> diffItems = tbUcCfgDiffItemService.selectByExample(exampleDiffItem);

        for (TbUcCfgDiffItem cur : diffItems) {
            //tb_uc_cfg_ds_column
            String srcColumnName = tbUcCfgDsColumnService.getNameByColumnId(cur.getSourceColumn());
            String destColumnName = tbUcCfgDsColumnService.getNameByColumnId(cur.getDestColumn());

            StringBuffer expr = new StringBuffer(" case when ");
            if (cur.getDiffMethod() == GvnDict.DiffMethod.CUSTOM) {
                //自定义
                expr.append("!(").append(cur.getDiffExpr()).append(")");
            } else if (cur.getDiffMethod() == GvnDict.DiffMethod.A_HAVE) {
                //A有B无
                expr.append(srcQuoteDsAlias).append(".rowid is not null and ")
                        .append(destQuoteDsAlias).append(".rowid is null");
            } else if (cur.getDiffMethod() == GvnDict.DiffMethod.B_HAVE) {
                //B有A无
                expr.append(srcQuoteDsAlias).append(".rowid is null and ")
                        .append(destQuoteDsAlias).append(".rowid is not null");
            } else if (cur.getDiffMethod() == GvnDict.DiffMethod.EQUAL) {
                //相等
                expr.append(srcQuoteDsAlias).append(".rowid is not null and ")
                        .append(destQuoteDsAlias).append(".rowid is not null and ");
                expr.append(srcQuoteDsAlias).append(".").append(srcColumnName)
                        .append(" != ")
                        .append(destQuoteDsAlias).append(destColumnName);
            }
            expr.append(" then '1' else '0' end ");

            tbUcCfgResultStorage.setSourceColumn(cur.getSourceColumn().toString());
            tbUcCfgResultStorage.setSourceColumnName(srcColumnName);
            tbUcCfgResultStorage.setDestColumn(cur.getDestColumn());
            tbUcCfgResultStorage.setMethod("");
            tbUcCfgResultStorage.setSourceType(GvnDict.ResultStoreSourceType.RESULT);
            tbUcCfgResultStorage.setGenExpr(expr.toString());
            tbUcCfgResultStorage.setRecId(null);
            tbUcCfgResultStorageService.insertAutoKey(tbUcCfgResultStorage);
        }

        //系统字段
        Long resultDsId = insertSysColumn(tbUcCfgAdtRule, tbUcCfgResultStorage);
    }
============================================   
https://1882618.s4.udesk.cn:443/
zm123456
系统概要设计	第28-31页
　　　　· 基本设计概念	第28页
　　　　· 工单流程引擎	第28-31页
　　· 系统详细设计	第31-40页
　　　　· 工单呈现	第31页
　　　　· 工单处理	第31页
　　　　· 数据流图	第31-32页
　　　　· 结构图	第32-34页
　　　　· 工作流程图
 
保存	第45页
　　　　· 发起	第45-46页
　　　　· 受理	第46页
　　　　· 驳回	第46页
　　　　· 派发	第46-47页
　　　　· 内部转发	第47页
　　　　· 回复	第47页
　　　　· 阶段处理	第47页
　　　　· 归档	第47-48页
　　· 运行结果与分析
CREATE TABLE `work_order` (
  `id` bigint NOT NULL COMMENT 'ID',
  `title` varchar(256) NOT NULL DEFAULT '' COMMENT '标题',
	
	`type` tinyint NOT NULL DEFAULT 1 COMMENT '类型:1 提醒 2 核查 3 督办',
  `status` tinyint NOT NULL DEFAULT 1 COMMENT '状态:1 开启 2 关闭',
	`solve_status` tinyint NOT NULL DEFAULT 1 COMMENT '解决状态:1 解决中 2 已解决 3 未解决',
	`priority` tinyint not null default 1 comment '优先级：1 普通 2 重要 3 紧急 4 紧急&重要',
	`classify` tinyint NOT NULL DEFAULT 1 COMMENT '归类:1 手动 2 自动',
	
	`is_audit` tinyint not null default 1 comment '是否审核：0 是 1 否',
	`is_flow` tinyint not null default 1 comment '是否流转：0 是 1 否',
	`is_dispense` tinyint not null default 1 comment '是否分发：0 是 1 否',
	
	`content` varchar(2000) NOT NULL DEFAULT '' COMMENT '内容',
	`attachment_path` varchar(512) not null default '' comment '附件',
	`skip_url` varchar(512) not null default '' comment '跳转链接',
	
	`feedback_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '要求反馈时间',
	
  `indb_staff` varchar(32) DEFAULT NULL COMMENT '记录生成员工/发起人',
  `indb_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录生成时间/发起时间',
	
  `modify_staff` varchar(32) DEFAULT NULL COMMENT '记录修改员工',
  `modify_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录修改时间',
	
  `remark` varchar(2000) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='工单表';

CREATE TABLE `work_order_flow` (
  `id` bigint NOT NULL COMMENT 'ID',
  `work_order_id` bigint NOT NULL COMMENT '工单ID',
	
	`reply_msg` varchar(2000) NOT NULL DEFAULT '' COMMENT '回复信息',
	`attachment` varchar(512) not null default '' comment '附件',
	
  `indb_staff` varchar(32) DEFAULT NULL COMMENT '记录生成员工',
  `indb_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录生成时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='工单流转表';

CREATE TABLE `work_order_follower` (
  `id` bigint NOT NULL COMMENT 'ID',
  `work_order_id` bigint NOT NULL COMMENT '工单ID',
	`staff_id` bigint NOT NULL COMMENT '关注人ID',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='工单-关注人';

CREATE TABLE `work_order_receiver` (
  `id` bigint NOT NULL COMMENT 'ID',
  `work_order_id` bigint NOT NULL COMMENT '工单ID',
	`staff_id` bigint NOT NULL COMMENT '受理人ID',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='工单-受理人';
============================================
INSERT/*+ append */ INTO ua_dbg.UCR_DETAIL_TMP_8118100 (
	result_2,	result_3,	result_4,	result_1) 
SELECT 

	CASE WHEN expr THEN '0' ELSE '1' END result_2,

	CASE WHEN A3.ROWID IS NOT NULL AND A2.ROWID IS NULL 
	THEN '1' ELSE '0' END result_3,

	CASE WHEN A3.ROWID IS NOT NULL AND A2.ROWID IS NULL 
	THEN '1' ELSE '0' END result_4,

	CASE WHEN A3.rowid is not null and A2.rowid is not null 
	and A3.cust_name != A2.cust_name THEN '1' ELSE '0' END result_1

FROM ua_dbg.TF_F_CUST_GROUP A2,ua_dbg.TF_F_CUST_GROUP_ETL A3

WHERE (A3.cust_id = A2.cust_id(+));
============================================

insert into hch_class_copy_r(class_name, uc$ds_id, uc$data_date, uc$data_batch_id, uc$tag_1500934484123648)
select  case when !( 1=1 ) then 1 else 0 end , ${UC_DS_ID}, ${DATA_DATE}, ${DATA_BATCH_ID}, null
 from t_stu_class D1
join hch_class_copy as D2 on ( 1=2 )
where  1=3 
;



============================================