spring:
  profiles:
    active: @profileActive@
==========================================安装
	cd /usr/local/src
	wget https://zysd-shanghai.oss-cn-shanghai.aliyuncs.com/software/linux/maven/apache-maven-3.6.1-bin.tar.gz
	tar -zxvf apache-maven-3.6.1-bin.tar.gz -C /usr/local
	cd ../apache-maven-3.6.1
	
环境变量
	1. 编辑环境变量
	vim /etc/profile

	2. 添加Maven的M2_HOME地址
	export M2_HOME=/usr/local/apache-maven-3.6.1
	export PATH=$PATH:$M2_HOME/bin

	3. 保存配置文件
	source /etc/profile
验证是否成功安装
	mvn -version
	
配置maven的镜像仓库
	vim  conf/settings.xml 
	<!-- 指定b本地仓库 -->
	<localRepository>/usr/local/apache-maven-3.6.1/repo</localRepository>
	
	设置镜像，在mirrors节点添加以下节点
	<!-- 从阿里云镜像下载jar包 -->
	<mirrors>
		<mirror>
			<id>alimaven</id>
			<name>aliyun maven</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<mirrorOf>central</mirrorOf>        
		</mirror>
	</mirrors>
	
	<!-- 指定jdk1.8 -->
	 <profiles>
		<profile>
                <id>jdk1.8</id>
                <activation>
                <activeByDefault>true</activeByDefault>
                <jdk>1.8</jdk>
                </activation>
                <properties>
                        <maven.compiler.source>1.8</maven.compiler.source>
                        <maven.compiler.target>1.8</maven.compiler.target>                        
						<maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
                </properties>
        </profile>
	</profiles>

去到pom.xml 目录下
mvn -compire
==========================================参考：	https://www.linuxidc.com/linux/2020-04/162861.htm
1. 创建Maven的普通Java项目：
  mvn archetype:create
  -DgroupId=packageName
  -DartifactId=projectName 

2. 创建Maven的Web项目： 
    mvn archetype:create
    -DgroupId=packageName   
    -DartifactId=webappName
    -DarchetypeArtifactId=maven-archetype-webapp   
3. 编译源代码： mvn compile
4. 编译测试代码：mvn test-compile   
5. 运行测试：mvn test 
6. 产生site：mvn site 
7. 打包：mvn package 
8. 在本地Repository中安装jar：mvn install
9. 清除产生的项目：mvn clean 
10. 生成eclipse项目：mvn eclipse:eclipse 
11. 生成idea项目：mvn idea:idea 
12. 组合使用goal命令，如只打包不测试：mvn -Dtest package 
13. 编译测试的内容：mvn test-compile 
14. 只打jar包: mvn jar:jar 
15. 只测试而不编译，也不测试编译：mvn test -skipping compile -skipping test-compile
      ( -skipping 的灵活运用，当然也可以用于其他组合命令) 
16. 清除eclipse的一些系统设置:mvn eclipse:clean 
==========================================toggle skip tests mode

==========================================可能错误
-----------------------There are test failures
解决：	maven 打包跳过单元测试

mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true 
mvn clean install -P dev -Dmaven.test.skip=true -Dmaven.javadoc.skip=true
==========================================172.16.7.57
/usr/local/web/data-govern/
ls /usr/local/web/data-govern/*/target/*.jar
\cp /usr/local/web/data-govern/*/target/*.jar /usr/local/web/data-govern/*/*/target/*.jar /www/data_govern/jars/
cp /usr/local/web/data-govern/*/target/*.jar /usr/local/web/data-govern/*/*/target/*.jar /www/data_govern/jars/
cp /usr/local/web/data-govern/*/*/target/baop-dbserver-1.0.0-SNAPSHOT.jar /www/data_govern/jars/
cp /usr/local/web/data-govern/*/target/data-govern-0.0.1-SNAPSHOT.jar /www/data_govern/jars/

tail -f /www/data_govern/jars/data-govern-0.0.1-SNAPSHOT.log
tail -f /www/data_govern/jars/baop-dbserver-1.0.0-SNAPSHOT.log

tail -f /www/data_govern/jars/baop-gateway-1.0.1-SNAPSHOT.log
tail -f /www/jars/databank-gateway.log

/www/data_govern/jars/
nohup java -jar /www/data_govern/jars/baop-dbserver-1.0.0-SNAPSHOT.jar >> /www/data_govern/jars/baop-dbserver-1.0.0-SNAPSHOT.log &
nohup java -jar /www/data_govern/jars/baop-gateway-1.0.1-SNAPSHOT.jar >> /www/data_govern/jars/baop-gateway-1.0.1-SNAPSHOT.log &
nohup java -jar /www/data_govern/jars/baop-authapi-1.0.0-SNAPSHOT.jar >> /www/data_govern/jars/baop-authapi-1.0.0-SNAPSHOT.log &

nohup java -jar /www/data_govern/jars/data-govern-0.0.1-SNAPSHOT.jar >> /www/data_govern/jars/data-govern-0.0.1-SNAPSHOT.log &
nohup java -Xdebug -Xrunjdwp:transport=dt_socket,address=48089,server=y,suspend=n -jar data-govern-0.0.1-TEST.jar >> /www/data_govern/logs/data-govern-0.0.1-TEST.jar.log 2>&1

/www/jars/
nohup java -jar /www/jars/databank-eurekaserver.jar >> /www/jars/databank-eurekaserver.log &
nohup java -jar /www/jars/databank-dbserver.jar >> /www/jars/databank-dbserver.log &
nohup java -jar /www/jars/databank-gateway.jar >> /www/jars/databank-gateway.log &
nohup java -jar /www/jars/databank-auapi.jar >> /www/jars/databank-auapi.log &
==========================================172.16.7.71
nohup java -jar /root/mytar/databank-eurekaserver.jar >> /root/mytar/databank-eurekaserver.log &
==========================================示例
cd /usr/local/web/data-govern/data-govern
mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true 
\cp target/data-govern-0.0.1-SNAPSHOT.jar /www/data_govern/jars/
ps -ef|grep java
kill 27985
nohup java -jar /www/data_govern/jars/data-govern-0.0.1-SNAPSHOT.jar >> /www/data_govern/jars/data-govern-0.0.1-SNAPSHOT.log &
==========================================
{
    "userAccount": "xyd",
    "password": "1d6f7ce922ae65bbe01a4130f5b60335"
}
{
    "userAccount": "zx",
    "password": "e6c760b3216a51c656c5861d72d5bf62"
}
==========================================

==========================================

==========================================