1. node.js安装
https://nodejs.org/en/download/

node -v
2.npm的安装 
由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 "npm -v" 来测试是否成功安装。命令如下，出现版本提示表示安装成功:

npm -v
5.6.0

更新npm自己：  npm install -g npm 
存在package.json文件：
npm install 
=====================================================================================可能错误 ：npm install -g @vue/cli
1、若出现错误：Unexpected end of JSON input while parsing near···
解决办法：
npm cache clean --force
npm cache verify
npm i -g @vue/cli
安装后
查看版本（是否安装成功）：vue -V(大写的V)

2、npm WARN deprecated core-js@2.6.11: core-js@<3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the actual version of core-js@3.
解决办法：
npm install --save  -g core-js@^3
=====================================================================================
npm config set registry https://registry.npmjs.org
更换成淘宝的源
npm config set registry https://registry.npm.taobao.org 
– 配置后可通过下面方式来验证是否成功 
npm config get registry 
– 或npm info express
=====================================================================================
1、package.json 

生成方式：执行 npm init 命令。
主要作用：描述项目及项目所依赖的模块信息。

2、package-lock.json 

生成方式：从 npm 5 版本之后只要使用 npm install 命令下载，就会自动生成 package-lock.json 文件。
主要作用：
1）描述 node_modules 文件中所有模块的版本信息，模块来源及依赖的小版本信息。
2）当版本升级，使用 npm install 命令时，会安装 package.json 中指定的大版本的最新版本。如 package.json 中指定版本"dependencies": { "webpack": "^2.0.0" }，则 package-lock.json 会按照 {"webpack": "2.7.0"} 版本升级。在保证大版本号前提下的最新版本。webpack "2.7.0" 是 "2.x.x" 的最高版本。

以后直接改 package.json 文件相应模块的版本号，再执行npm install不会更新了，你只能手动用npm install xxx@yy指定版本号来安装，然后它会自动更新 package-lock.json 文件。直接执行npm install时，如果不存在 package-lock.json 文件，它会根据安装模块后的 node_modules 目录结构来创建；如果已经存在 package-lock.json 文件，则它只会根据 package-lock.json 文件指定的结构来下载模块，并不会理会 package.json 文件

原来package.json文件只能锁定大版本，也就是版本号的第一位，并不能锁定后面的小版本，你每次npm install都是拉取的该大版本下的最新的版本，为了稳定性考虑我们几乎是不敢随意升级依赖包的，这将导致多出来很多工作量，测试/适配等，所以package-lock.json文件出来了，当你每次安装一个依赖的时候就锁定在你安装的这个版本。
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================